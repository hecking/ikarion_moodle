// Generated by CoffeeScript 1.6.3
(function() {
  "use strict";
  var angular, datastoreSelectionDirective, dummy;

  window.ut = window.ut || {};

  ut.commons = ut.commons || {};

  angular = window.angular;

  dummy = {
    loadDataFromJson: null
  };

  datastoreSelectionDirective = function(localStorageService) {
    return {
      restrict: "E",
      template: "<table width=\"100%\" border=\"0\">\n    <tr>\n        <td width=\"1%\">\n            {{categoryLabel | i_g4i18n}}\n        </td>\n        <td>\n            <select ng-model=\"selectedCategory\"\n                    ng-options=\"category for category in dataStore.getCategories()\">\n            </select>\n        </td>\n        <td rowspan='2' width=\"1%\" valign=\"middle\" align=\"right\">\n          <i class=\"fa fa-play fa-fw activeButton fontAweSomeButton\"\n                  ng-class='{disabledButton:disableLoadButton}'\n                       ng-click='loadSeletedResource()'></i>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            {{dataLabel | i_g4i18n}}\n        </td>\n        <td>\n            <select ng-model=\"selectedData\" ng-options=\"data.title for data in getDatas()\">\n            </select>\n        </td>\n    </tr>\n</table>",
      replace: true,
      link: function(scope, element, attrs) {
        var categories, dataStoreName, datas, initialized, selectedCategoryStoreName, selectedData, selectedDataTitle, selectedDataTitleStoreName, uploadLoadButtonStatus;
        dataStoreName = ut.commons.utils.getAttributeValue(attrs, "dataStoreName");
        if (dataStoreName === null) {
          throw new Error("attribute dataStoreName is not defined");
        }
        scope.categoryLabel = "Category";
        if (attrs["categorylabel"]) {
          scope.categoryLabel = attrs["categorylabel"];
        }
        scope.dataLabel = "Data";
        if (attrs["datalabel"]) {
          scope.dataLabel = attrs["datalabel"];
        }
        scope.disableLoadButton = true;
        uploadLoadButtonStatus = function() {
          return scope.disableLoadButton = !scope.selectedCategory || !scope.selectedData;
        };
        selectedCategoryStoreName = "" + dataStoreName + "_selectedCategory";
        selectedDataTitleStoreName = "" + dataStoreName + "_selectedDataTitle";
        if (!scope[dataStoreName]) {
          throw new Error("cannot find data store, named '" + dataStoreName + "' on the scope");
        }
        scope.dataStore = scope[dataStoreName];
        scope.selectedCategory = localStorageService.get(selectedCategoryStoreName);
        scope.selectedData = "";
        categories = scope.dataStore.getCategories();
        if (scope.selectedCategory) {
          if (categories.indexOf(scope.selectedCategory) < 0) {
            scope.selectedCategory = "";
          }
        }
        if (!scope.selectedCategory && categories.length === 1) {
          scope.selectedCategory = categories[0];
        }
        if (scope.selectedCategory) {
          selectedDataTitle = localStorageService.get(selectedDataTitleStoreName);
          if (selectedDataTitle) {
            selectedData = scope.dataStore.getData(scope.selectedCategory, selectedDataTitle);
          }
          if (!selectedData) {
            datas = scope.dataStore.getDatas(scope.selectedCategory);
            if (datas.length === 1) {
              selectedData = datas[0];
            }
          }
          if (selectedData) {
            scope.selectedData = selectedData;
          }
        } else {
          scope.selectedCategory = "";
        }
        scope.getDatas = function() {
          return scope.dataStore.getDatas(scope.selectedCategory);
        };
        uploadLoadButtonStatus();
        initialized = false;
        scope.$watch("selectedCategory", function() {
          localStorageService.set(selectedCategoryStoreName, scope.selectedCategory);
          if (initialized) {
            scope.selectedData = "";
          } else {
            initialized = true;
          }
          return uploadLoadButtonStatus();
        });
        scope.loadSeletedResource = function() {
          if (scope.selectedCategory && scope.selectedData) {
            console.log("load data: category '" + scope.selectedCategory + "', data '" + scope.selectedData.title + "'");
            return scope.dataStore.sendLoadEvent(scope.selectedData);
          }
        };
        return scope.$watch("selectedData", function() {
          localStorageService.set(selectedDataTitleStoreName, scope.selectedData.title);
          return uploadLoadButtonStatus();
        });
      }
    };
  };

  ut.commons.golabUtils.directive("datastoreselection", ["localStorageService", datastoreSelectionDirective]);

}).call(this);

/*
//@ sourceMappingURL=ngDataStore.map
*/
