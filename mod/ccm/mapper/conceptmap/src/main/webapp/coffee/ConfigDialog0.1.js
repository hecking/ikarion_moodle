// Generated by CoffeeScript 1.6.3
(function() {
  "use strict";
  window.ut = window.ut || {};

  window.ut.tools = window.ut.tools || {};

  window.ut.tools.conceptmapper = window.ut.tools.conceptmapper || {};

  window.ut.tools.conceptmapper.ConfigDialog = (function() {
    function ConfigDialog(currentConfiguration, configurationCallback) {
      var $dialogElement, $fieldset, $form,
        _this = this;
      if ($(document.body).find("#ut_tools_conceptmapper_ConfigDialog").length === 0) {
        $dialogElement = $("<div id='ut_tools_conceptmapper_ConfigDialog'/>");
        $dialogElement.hide();
        $(document.body).append($dialogElement);
      } else {
        $dialogElement = $(document.body).find("#ut_tools_conceptmapper_ConfigDialog");
        $dialogElement.empty();
      }
      $fieldset = $("<fieldset/>");
      $.each(currentConfiguration, function(id, setting) {
        $input;
        var $input;
        if (setting.type === "boolean") {
          $input = $("<input type='checkbox' name='" + id + "'> " + setting.label + "</input>");
          if (setting.value === "true") {
            $input.attr("checked", "checked");
          }
          $fieldset.append($input);
        } else if (setting.type === "array" || setting.type === "string") {
          $input = $("<input type='text' name='" + id + "'></input>");
          $input.val(setting.value);
          $fieldset.append("<label for='" + id + "'>" + setting.label + "</label>");
          $fieldset.append($input);
        } else {
          $input = $("<input type='text' name='" + id + "'></input>");
          $fieldset.append("<label for='" + id + "'>" + setting.label + "</label>");
          $fieldset.append($input);
        }
        $input.attr("title", "" + setting.description + ".");
        if (setting.configurable === "false") {
          $input.attr("readonly", true);
        }
        return $fieldset.append("<br/>");
      });
      $form = $("<form/>");
      $form.append($fieldset);
      $dialogElement.append($form);
      $("#ut_tools_conceptmapper_ConfigDialog").dialog({
        title: "Tool configuration",
        resizable: false,
        modal: true,
        autoOpen: true,
        closeOnEscape: false,
        dialogClass: "ut_tools_conceptmapper_dialog",
        buttons: {
          "Ok": function() {
            $.each(currentConfiguration, function(id, settings) {
              if (settings.type === "boolean") {
                $fieldset.find("input[name='" + id + "']").each(function(index, input) {
                  return currentConfiguration["" + id].value = $(input).is(':checked').toString();
                });
              }
              if (settings.type === "array") {
                $fieldset.find("input[name='" + id + "']").each(function(index, input) {
                  return currentConfiguration["" + id].value = $(input).val().split(",");
                });
              }
              if (settings.type === "string") {
                return $fieldset.find("input[name='" + id + "']").each(function(index, input) {
                  return currentConfiguration["" + id].value = $(input).val();
                });
              }
            });
            configurationCallback(currentConfiguration);
            return $("#ut_tools_conceptmapper_ConfigDialog").dialog("close");
          },
          "Cancel": function() {
            return $("#ut_tools_conceptmapper_ConfigDialog").dialog("close");
          }
        }
      });
    }

    return ConfigDialog;

  })();

  window.ut.tools.conceptmapper.defaultConfiguration = {
    debug: {
      label: "Debug mode?",
      description: "Turns on/off verbose console messages.",
      type: "boolean",
      value: "true",
      configurable: "true"
    },
    actionlogging: {
      label: "actionlogging",
      description: "Configures the action logging target.",
      type: "string",
      value: "consoleShort",
      configurable: "true"
    },
    show_prompts: {
      label: "Show prompts?",
      description: "Are incoming prompts and notifications shown as a pop-up message?",
      type: "boolean",
      value: "true",
      configurable: "true"
    },
    textarea_concepts: {
      label: "Show text input?",
      description: "Is the user allowed to freely create and edit new concepts?",
      type: "boolean",
      value: "true",
      configurable: "true"
    },
    combobox_concepts: {
      label: "Show combobox input?",
      description: "Is the combobox node with pre-defined concepts available?",
      type: "boolean",
      value: "true",
      configurable: "true"
    },
    drop_external: {
      label: "Drag'n'drop external concepts?",
      description: "Is it possible to drag highlighted text as new concepts from other applications?",
      type: "boolean",
      value: "true",
      configurable: "true"
    },
    concepts: {
      label: "Available concepts",
      description: "A list with pre-defined concepts to select from in the combobox.",
      type: "array",
      value: ["length", "mass", "time", "electric current", "thermodynamic temperature", "amount of substance", "luminous intensity"],
      configurable: "true"
    },
    relations: {
      label: "Available relations",
      description: "A list with pre-defined relations to select from.",
      type: "array",
      value: ["is a", "is part of", "has", "leads to", "influences", "increases", "decreases"],
      configurable: "true"
    }
  };

}).call(this);

/*
//@ sourceMappingURL=ConfigDialog0.1.map
*/
